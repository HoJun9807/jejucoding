Frond-end
HTML(HyperText Markup Language) : 웹을 만들기 위한 가장 기초적인 언어

하이퍼텍스트 : 참조(하이퍼링크)를 통해 한 문서에서 다른 문서로 즉시 접근할 수 있는 텍스트

마크업 언어 : 문서의 구조를 표현하는 역할

프로그래밍 언어 : 문제를 해결하기 위해 컴퓨터에게 주어지는 처리방법과 순서를 정해주는 명령문을 작성하는 언어(C, C++, Java...)

마크업 언어 : 구조를 정하는 언어(HTML)



CSS(Cascading Style Sheet)

캐스캐이딩 : 계단식, 위에서 아래로 흐르는

스타일 시트 : 글꼴의 크기, 모양, 컬러, 문단 설정 등 미리 정의해 스타일로 만들었다가 웹 문서의 본문에서 그 스타일을 참조하여 사용하는 기능

정적 언어 : HTML

동적 언어 : JavaScript



JavaScript : HTML, CSS로 만들어진 정적인 페이지를 동적으로 만들어 주는 언어



Back-end
Python : 1991년 귀도 반 로섬이 발표한 고급 프로그래밍 언어(인터프리터 언어)

프로그래밍 언어 : 내가 의도한 바를 정확하고 효율적으로 기계가 수행할 수 있도록 하는 것

저급 프로그래밍 언어 : 로우 레벨 프로그래밍 언어란 컴퓨터가 이해하기 쉽게 작성된 프로그래밍 언어로, 일반적으로 기계어와 어셈블리어를 일컫는다. 실행속도가 매우 빠르지만 배우기가 어려우며 유지보수가 힘든 것이 단점이다. 현재는 특수한 경우가 아니면 사용되지 않는다.

Python의 장점

배우기 쉽다. ex) print("a") // a
쉽고 빠르게 개발이 가능하다.
무료에 엄청난 커뮤니티 보유
적용 범위가 많다.(GUI 프로그래밍, 웹 프로그래밍, 시스템 유틸리티 제작, IoT, 데이터 분석, 인공지능 ,게임....)
컴파일 언어 : 코드 전체를 기계어로 변환하여 실행하는 언어(실행 속도가 빠르다. 안정적이다.)

인터프리터 언어 : 소스 코드를 한 줄 단위로 변환하고 실행하는 언어(개발 속도가 빠르다. 실행 속도가 빠르지는 않다.)



